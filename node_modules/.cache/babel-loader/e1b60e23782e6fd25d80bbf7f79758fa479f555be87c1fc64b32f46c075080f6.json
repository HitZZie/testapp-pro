{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javis\\\\Desktop\\\\Proyecto de Tests\\\\personal-testing-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AddQuestionForm from \"./AddQuestionForm\";\nimport ImportTxtQuestions from \"./ImportTxtQuestions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffle(arr) {\n  return [...arr].sort(() => Math.random() - 0.5);\n}\nconst MODOS = [{\n  key: \"examen\",\n  label: \"Simular Examen\"\n}, {\n  key: \"largo\",\n  label: \"Test Largo (50)\"\n}, {\n  key: \"corto\",\n  label: \"Test Corto (20)\"\n}, {\n  key: \"repaso\",\n  label: \"Modo Repaso\"\n}];\nfunction getTemas(questions) {\n  const temasUnicos = Array.from(new Set(questions.map(q => q.tema)));\n  return [\"Todos los temas\", ...temasUnicos];\n}\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [modo, setModo] = useState(null);\n  const [testQuestions, setTestQuestions] = useState([]);\n  const [current, setCurrent] = useState(0);\n  const [temaSeleccionado, setTemaSeleccionado] = useState(null);\n  const [pendingModo, setPendingModo] = useState(null);\n  const handleAddQuestion = q => setQuestions(prev => [...prev, q]);\n  const handleImportQuestions = imported => setQuestions(prev => [...prev, ...imported]);\n\n  // Nuevo: Selección de tema antes de test largo/corto\n  const handleModoClick = modo => {\n    if (modo === \"largo\" || modo === \"corto\") {\n      setPendingModo(modo);\n      setTemaSeleccionado(\"Todos los temas\");\n    } else {\n      startTest(modo, \"Todos los temas\");\n    }\n  };\n  const startTest = (modo, tema) => {\n    let selected = [];\n    let pool = questions;\n    if (tema && tema !== \"Todos los temas\") {\n      pool = questions.filter(q => q.tema === tema);\n    }\n    if (modo === \"examen\") selected = shuffle(pool);\n    if (modo === \"largo\") selected = shuffle(pool).slice(0, 50);\n    if (modo === \"corto\") selected = shuffle(pool).slice(0, 20);\n    if (modo === \"repaso\") selected = shuffle(pool).slice(0, 10);\n    setTestQuestions(selected);\n    setCurrent(0);\n    setModo(modo);\n    setPendingModo(null);\n    setTemaSeleccionado(null);\n  };\n  const endTest = () => {\n    setModo(null);\n    setTestQuestions([]);\n    setCurrent(0);\n  };\n\n  // Render selector de tema si corresponde\n  if (pendingModo) {\n    const temas = getTemas(questions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecciona un tema para el test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: temaSeleccionado !== null && temaSeleccionado !== void 0 ? temaSeleccionado : \"Todos los temas\",\n        onChange: e => setTemaSeleccionado(e.target.value),\n        children: temas.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t,\n          children: t\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startTest(pendingModo, temaSeleccionado !== null && temaSeleccionado !== void 0 ? temaSeleccionado : \"Todos los temas\"),\n          disabled: !temaSeleccionado || temaSeleccionado !== \"Todos los temas\" && questions.filter(q => q.tema === temaSeleccionado).length === 0,\n          children: \"Empezar test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setPendingModo(null);\n            setTemaSeleccionado(null);\n          },\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render test mode\n  if (modo && testQuestions.length > 0) {\n    var _MODOS$find;\n    const q = testQuestions[current];\n    const userAnswer = answers[current];\n    const isCorrect = userAnswer && userAnswer === q.answer;\n    const totalAnswered = Object.keys(answers).length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [(_MODOS$find = MODOS.find(m => m.key === modo)) === null || _MODOS$find === void 0 ? void 0 : _MODOS$find.label, \" \\u2014 Pregunta \", current + 1, \" de \", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [q.tema, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), \" \", q.question, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: q.options.map((opt, i) => {\n            const letra = [\"A\", \"B\", \"C\", \"D\"][i];\n            let color = \"\";\n            if (userAnswer) {\n              if (letra === q.answer) color = \"#4caf50\"; // verde correcta\n              if (letra === userAnswer && userAnswer !== q.answer) color = \"#e57373\"; // rojo fallada\n            }\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                background: color,\n                padding: \"0.5em\",\n                borderRadius: 6,\n                margin: \"0.2em 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: !!userAnswer,\n                style: {\n                  background: \"none\",\n                  border: \"none\",\n                  color: \"inherit\",\n                  fontWeight: \"bold\",\n                  cursor: userAnswer ? \"default\" : \"pointer\",\n                  fontSize: \"1em\"\n                },\n                onClick: () => handleAnswer(letra),\n                children: [letra, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), \" \", opt, userAnswer && letra === q.answer ? \" ✅\" : \"\", userAnswer && letra === userAnswer && userAnswer !== q.answer ? \" ❌\" : \"\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), userAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"1em 0\",\n          fontWeight: \"bold\"\n        },\n        children: isCorrect ? \"¡Correcto!\" : `Incorrecto. Respuesta correcta: ${q.answer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Preguntas respondidas: \", totalAnswered, \" / \", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: current === 0,\n        onClick: () => setCurrent(c => c - 1),\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: current === testQuestions.length - 1,\n        onClick: () => setCurrent(c => c + 1),\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endTest,\n        children: \"Salir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Pantalla principal\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"App Personal de Tests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selecciona un modo de test o revisa los temas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"modos\",\n      children: MODOS.map(m => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModoClick(m.key),\n        disabled: questions.length === 0,\n        children: m.label\n      }, m.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImportTxtQuestions, {\n      onImport: handleImportQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddQuestionForm, {\n      onAdd: handleAddQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preguntas a\\xF1adidas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [q.tema, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), \" \", q.question, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: [[\"A\", \"B\", \"C\", \"D\"][i], \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, this), \" \", opt, \" \", q.answer === [\"A\", \"B\", \"C\", \"D\"][i] ? \"✅\" : \"\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"b3ynD3HP4WMksdmn3L5k5yC8L08=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddQuestionForm","ImportTxtQuestions","jsxDEV","_jsxDEV","shuffle","arr","sort","Math","random","MODOS","key","label","getTemas","questions","temasUnicos","Array","from","Set","map","q","tema","App","_s","setQuestions","modo","setModo","testQuestions","setTestQuestions","current","setCurrent","temaSeleccionado","setTemaSeleccionado","pendingModo","setPendingModo","handleAddQuestion","prev","handleImportQuestions","imported","handleModoClick","startTest","selected","pool","filter","slice","endTest","temas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","t","style","marginTop","onClick","disabled","length","_MODOS$find","userAnswer","answers","isCorrect","answer","totalAnswered","Object","keys","find","m","question","options","opt","i","letra","color","background","padding","borderRadius","margin","border","fontWeight","cursor","fontSize","handleAnswer","c","onImport","onAdd","idx","_c","$RefreshReg$"],"sources":["C:/Users/javis/Desktop/Proyecto de Tests/personal-testing-app/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Question } from \"./types\";\nimport AddQuestionForm from \"./AddQuestionForm\";\nimport ImportTxtQuestions from \"./ImportTxtQuestions\";\n\nfunction shuffle<T>(arr: T[]): T[] {\n  return [...arr].sort(() => Math.random() - 0.5);\n}\n\nconst MODOS = [\n  { key: \"examen\", label: \"Simular Examen\" },\n  { key: \"largo\", label: \"Test Largo (50)\" },\n  { key: \"corto\", label: \"Test Corto (20)\" },\n  { key: \"repaso\", label: \"Modo Repaso\" },\n];\n\nfunction getTemas(questions: Question[]) {\n  const temasUnicos = Array.from(new Set(questions.map(q => q.tema)));\n  return [\"Todos los temas\", ...temasUnicos];\n}\n\nexport default function App() {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [modo, setModo] = useState<string | null>(null);\n  const [testQuestions, setTestQuestions] = useState<Question[]>([]);\n  const [current, setCurrent] = useState(0);\n  const [temaSeleccionado, setTemaSeleccionado] = useState<string | null>(null);\n  const [pendingModo, setPendingModo] = useState<string | null>(null);\n\n  const handleAddQuestion = (q: Question) => setQuestions((prev) => [...prev, q]);\n  const handleImportQuestions = (imported: Question[]) => setQuestions((prev) => [...prev, ...imported]);\n\n  // Nuevo: Selección de tema antes de test largo/corto\n  const handleModoClick = (modo: string) => {\n    if (modo === \"largo\" || modo === \"corto\") {\n      setPendingModo(modo);\n      setTemaSeleccionado(\"Todos los temas\");\n    } else {\n      startTest(modo, \"Todos los temas\");\n    }\n  };\n\n  const startTest = (modo: string, tema: string) => {\n    let selected: Question[] = [];\n    let pool = questions;\n    if (tema && tema !== \"Todos los temas\") {\n      pool = questions.filter(q => q.tema === tema);\n    }\n    if (modo === \"examen\") selected = shuffle(pool);\n    if (modo === \"largo\") selected = shuffle(pool).slice(0, 50);\n    if (modo === \"corto\") selected = shuffle(pool).slice(0, 20);\n    if (modo === \"repaso\") selected = shuffle(pool).slice(0, 10);\n    setTestQuestions(selected);\n    setCurrent(0);\n    setModo(modo);\n    setPendingModo(null);\n    setTemaSeleccionado(null);\n  };\n\n  const endTest = () => {\n    setModo(null);\n    setTestQuestions([]);\n    setCurrent(0);\n  };\n\n  // Render selector de tema si corresponde\n  if (pendingModo) {\n    const temas = getTemas(questions);\n    return (\n      <div className=\"App\">\n        <h2>Selecciona un tema para el test</h2>\n        <select value={temaSeleccionado ?? \"Todos los temas\"} onChange={e => setTemaSeleccionado(e.target.value)}>\n          {temas.map(t => (\n            <option key={t} value={t}>{t}</option>\n          ))}\n        </select>\n        <div style={{ marginTop: 16 }}>\n          <button\n            onClick={() => startTest(pendingModo, temaSeleccionado ?? \"Todos los temas\")}\n            disabled={\n              !temaSeleccionado ||\n              (temaSeleccionado !== \"Todos los temas\" && questions.filter(q => q.tema === temaSeleccionado).length === 0)\n            }\n          >\n            Empezar test\n          </button>\n          <button onClick={() => { setPendingModo(null); setTemaSeleccionado(null); }}>Cancelar</button>\n        </div>\n      </div>\n    );\n  }\n\n  // Render test mode\n  if (modo && testQuestions.length > 0) {\n    const q = testQuestions[current];\n    const userAnswer = answers[current];\n    const isCorrect = userAnswer && userAnswer === q.answer;\n    const totalAnswered = Object.keys(answers).length;\n    return (\n      <div className=\"App\">\n        <h2>\n          {MODOS.find((m) => m.key === modo)?.label} — Pregunta {current + 1} de {testQuestions.length}\n        </h2>\n        <div>\n          <b>{q.tema}:</b> {q.question}\n          <ul>\n            {q.options.map((opt, i) => {\n              const letra = [\"A\", \"B\", \"C\", \"D\"][i];\n              let color = \"\";\n              if (userAnswer) {\n                if (letra === q.answer) color = \"#4caf50\"; // verde correcta\n                if (letra === userAnswer && userAnswer !== q.answer) color = \"#e57373\"; // rojo fallada\n              }\n              return (\n                <li key={i} style={{ background: color, padding: \"0.5em\", borderRadius: 6, margin: \"0.2em 0\" }}>\n                  <button\n                    disabled={!!userAnswer}\n                    style={{\n                      background: \"none\",\n                      border: \"none\",\n                      color: \"inherit\",\n                      fontWeight: \"bold\",\n                      cursor: userAnswer ? \"default\" : \"pointer\",\n                      fontSize: \"1em\",\n                    }}\n                    onClick={() => handleAnswer(letra)}\n                  >\n                    {letra}:\n                  </button>{\" \"}\n                  {opt}\n                  {userAnswer && letra === q.answer ? \" ✅\" : \"\"}\n                  {userAnswer && letra === userAnswer && userAnswer !== q.answer ? \" ❌\" : \"\"}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        {userAnswer && (\n          <div style={{ margin: \"1em 0\", fontWeight: \"bold\" }}>\n            {isCorrect ? \"¡Correcto!\" : `Incorrecto. Respuesta correcta: ${q.answer}`}\n          </div>\n        )}\n        <div>\n          Preguntas respondidas: {totalAnswered} / {testQuestions.length}\n        </div>\n        <button disabled={current === 0} onClick={() => setCurrent((c) => c - 1)}>\n          Anterior\n        </button>\n        <button\n          disabled={current === testQuestions.length - 1}\n          onClick={() => setCurrent((c) => c + 1)}\n        >\n          Siguiente\n        </button>\n        <button onClick={endTest}>Salir</button>\n      </div>\n    );\n  }\n\n  // Pantalla principal\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>App Personal de Tests</h1>\n        <p>Selecciona un modo de test o revisa los temas:</p>\n      </header>\n      <section className=\"modos\">\n        {MODOS.map((m) => (\n          <button key={m.key} onClick={() => handleModoClick(m.key)} disabled={questions.length === 0}>\n            {m.label}\n          </button>\n        ))}\n      </section>\n      <ImportTxtQuestions onImport={handleImportQuestions} />\n      <AddQuestionForm onAdd={handleAddQuestion} />\n      <section>\n        <h2>Preguntas añadidas</h2>\n        <ul>\n          {questions.map((q, idx) => (\n            <li key={idx}>\n              <b>{q.tema}:</b> {q.question}\n              <ul>\n                {q.options.map((opt, i) => (\n                  <li key={i}>\n                    <b>{[\"A\", \"B\", \"C\", \"D\"][i]}:</b> {opt} {q.answer === [\"A\", \"B\", \"C\", \"D\"][i] ? \"✅\" : \"\"}\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,OAAOA,CAAIC,GAAQ,EAAO;EACjC,OAAO,CAAC,GAAGA,GAAG,CAAC,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AACjD;AAEA,MAAMC,KAAK,GAAG,CACZ;EAAEC,GAAG,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAiB,CAAC,EAC1C;EAAED,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAkB,CAAC,EAC1C;EAAED,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAkB,CAAC,EAC1C;EAAED,GAAG,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAc,CAAC,CACxC;AAED,SAASC,QAAQA,CAACC,SAAqB,EAAE;EACvC,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,SAAS,CAACK,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACnE,OAAO,CAAC,iBAAiB,EAAE,GAAGN,WAAW,CAAC;AAC5C;AAEA,eAAe,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACT,SAAS,EAAEU,YAAY,CAAC,GAAGxB,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAgB,IAAI,CAAC;EACrD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAa,EAAE,CAAC;EAClE,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAAC+B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAgB,IAAI,CAAC;EAC7E,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAgB,IAAI,CAAC;EAEnE,MAAMmC,iBAAiB,GAAIf,CAAW,IAAKI,YAAY,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEhB,CAAC,CAAC,CAAC;EAC/E,MAAMiB,qBAAqB,GAAIC,QAAoB,IAAKd,YAAY,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGE,QAAQ,CAAC,CAAC;;EAEtG;EACA,MAAMC,eAAe,GAAId,IAAY,IAAK;IACxC,IAAIA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,OAAO,EAAE;MACxCS,cAAc,CAACT,IAAI,CAAC;MACpBO,mBAAmB,CAAC,iBAAiB,CAAC;IACxC,CAAC,MAAM;MACLQ,SAAS,CAACf,IAAI,EAAE,iBAAiB,CAAC;IACpC;EACF,CAAC;EAED,MAAMe,SAAS,GAAGA,CAACf,IAAY,EAAEJ,IAAY,KAAK;IAChD,IAAIoB,QAAoB,GAAG,EAAE;IAC7B,IAAIC,IAAI,GAAG5B,SAAS;IACpB,IAAIO,IAAI,IAAIA,IAAI,KAAK,iBAAiB,EAAE;MACtCqB,IAAI,GAAG5B,SAAS,CAAC6B,MAAM,CAACvB,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKA,IAAI,CAAC;IAC/C;IACA,IAAII,IAAI,KAAK,QAAQ,EAAEgB,QAAQ,GAAGpC,OAAO,CAACqC,IAAI,CAAC;IAC/C,IAAIjB,IAAI,KAAK,OAAO,EAAEgB,QAAQ,GAAGpC,OAAO,CAACqC,IAAI,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3D,IAAInB,IAAI,KAAK,OAAO,EAAEgB,QAAQ,GAAGpC,OAAO,CAACqC,IAAI,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3D,IAAInB,IAAI,KAAK,QAAQ,EAAEgB,QAAQ,GAAGpC,OAAO,CAACqC,IAAI,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC5DhB,gBAAgB,CAACa,QAAQ,CAAC;IAC1BX,UAAU,CAAC,CAAC,CAAC;IACbJ,OAAO,CAACD,IAAI,CAAC;IACbS,cAAc,CAAC,IAAI,CAAC;IACpBF,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMa,OAAO,GAAGA,CAAA,KAAM;IACpBnB,OAAO,CAAC,IAAI,CAAC;IACbE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,UAAU,CAAC,CAAC,CAAC;EACf,CAAC;;EAED;EACA,IAAIG,WAAW,EAAE;IACf,MAAMa,KAAK,GAAGjC,QAAQ,CAACC,SAAS,CAAC;IACjC,oBACEV,OAAA;MAAK2C,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClB5C,OAAA;QAAA4C,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxChD,OAAA;QAAQiD,KAAK,EAAEtB,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI,iBAAkB;QAACuB,QAAQ,EAAEC,CAAC,IAAIvB,mBAAmB,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,EACtGF,KAAK,CAAC3B,GAAG,CAACsC,CAAC,iBACVrD,OAAA;UAAgBiD,KAAK,EAAEI,CAAE;UAAAT,QAAA,EAAES;QAAC,GAAfA,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACThD,OAAA;QAAKsD,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAG,CAAE;QAAAX,QAAA,gBAC5B5C,OAAA;UACEwD,OAAO,EAAEA,CAAA,KAAMpB,SAAS,CAACP,WAAW,EAAEF,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI,iBAAiB,CAAE;UAC7E8B,QAAQ,EACN,CAAC9B,gBAAgB,IAChBA,gBAAgB,KAAK,iBAAiB,IAAIjB,SAAS,CAAC6B,MAAM,CAACvB,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKU,gBAAgB,CAAC,CAAC+B,MAAM,KAAK,CAC1G;UAAAd,QAAA,EACF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThD,OAAA;UAAQwD,OAAO,EAAEA,CAAA,KAAM;YAAE1B,cAAc,CAAC,IAAI,CAAC;YAAEF,mBAAmB,CAAC,IAAI,CAAC;UAAE,CAAE;UAAAgB,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,IAAI3B,IAAI,IAAIE,aAAa,CAACmC,MAAM,GAAG,CAAC,EAAE;IAAA,IAAAC,WAAA;IACpC,MAAM3C,CAAC,GAAGO,aAAa,CAACE,OAAO,CAAC;IAChC,MAAMmC,UAAU,GAAGC,OAAO,CAACpC,OAAO,CAAC;IACnC,MAAMqC,SAAS,GAAGF,UAAU,IAAIA,UAAU,KAAK5C,CAAC,CAAC+C,MAAM;IACvD,MAAMC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAACL,OAAO,CAAC,CAACH,MAAM;IACjD,oBACE1D,OAAA;MAAK2C,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClB5C,OAAA;QAAA4C,QAAA,IAAAe,WAAA,GACGrD,KAAK,CAAC6D,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAAC7D,GAAG,KAAKc,IAAI,CAAC,cAAAsC,WAAA,uBAAjCA,WAAA,CAAmCnD,KAAK,EAAC,mBAAY,EAACiB,OAAO,GAAG,CAAC,EAAC,MAAI,EAACF,aAAa,CAACmC,MAAM;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1F,CAAC,eACLhD,OAAA;QAAA4C,QAAA,gBACE5C,OAAA;UAAA4C,QAAA,GAAI5B,CAAC,CAACC,IAAI,EAAC,GAAC;QAAA;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAAChC,CAAC,CAACqD,QAAQ,eAC5BrE,OAAA;UAAA4C,QAAA,EACG5B,CAAC,CAACsD,OAAO,CAACvD,GAAG,CAAC,CAACwD,GAAG,EAAEC,CAAC,KAAK;YACzB,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACD,CAAC,CAAC;YACrC,IAAIE,KAAK,GAAG,EAAE;YACd,IAAId,UAAU,EAAE;cACd,IAAIa,KAAK,KAAKzD,CAAC,CAAC+C,MAAM,EAAEW,KAAK,GAAG,SAAS,CAAC,CAAC;cAC3C,IAAID,KAAK,KAAKb,UAAU,IAAIA,UAAU,KAAK5C,CAAC,CAAC+C,MAAM,EAAEW,KAAK,GAAG,SAAS,CAAC,CAAC;YAC1E;YACA,oBACE1E,OAAA;cAAYsD,KAAK,EAAE;gBAAEqB,UAAU,EAAED,KAAK;gBAAEE,OAAO,EAAE,OAAO;gBAAEC,YAAY,EAAE,CAAC;gBAAEC,MAAM,EAAE;cAAU,CAAE;cAAAlC,QAAA,gBAC7F5C,OAAA;gBACEyD,QAAQ,EAAE,CAAC,CAACG,UAAW;gBACvBN,KAAK,EAAE;kBACLqB,UAAU,EAAE,MAAM;kBAClBI,MAAM,EAAE,MAAM;kBACdL,KAAK,EAAE,SAAS;kBAChBM,UAAU,EAAE,MAAM;kBAClBC,MAAM,EAAErB,UAAU,GAAG,SAAS,GAAG,SAAS;kBAC1CsB,QAAQ,EAAE;gBACZ,CAAE;gBACF1B,OAAO,EAAEA,CAAA,KAAM2B,YAAY,CAACV,KAAK,CAAE;gBAAA7B,QAAA,GAElC6B,KAAK,EAAC,GACT;cAAA;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAAC,GAAG,EACZuB,GAAG,EACHX,UAAU,IAAIa,KAAK,KAAKzD,CAAC,CAAC+C,MAAM,GAAG,IAAI,GAAG,EAAE,EAC5CH,UAAU,IAAIa,KAAK,KAAKb,UAAU,IAAIA,UAAU,KAAK5C,CAAC,CAAC+C,MAAM,GAAG,IAAI,GAAG,EAAE;YAAA,GAjBnES,CAAC;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAkBN,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EACLY,UAAU,iBACT5D,OAAA;QAAKsD,KAAK,EAAE;UAAEwB,MAAM,EAAE,OAAO;UAAEE,UAAU,EAAE;QAAO,CAAE;QAAApC,QAAA,EACjDkB,SAAS,GAAG,YAAY,GAAG,mCAAmC9C,CAAC,CAAC+C,MAAM;MAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CACN,eACDhD,OAAA;QAAA4C,QAAA,GAAK,yBACoB,EAACoB,aAAa,EAAC,KAAG,EAACzC,aAAa,CAACmC,MAAM;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACNhD,OAAA;QAAQyD,QAAQ,EAAEhC,OAAO,KAAK,CAAE;QAAC+B,OAAO,EAAEA,CAAA,KAAM9B,UAAU,CAAE0D,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAE;QAAAxC,QAAA,EAAC;MAE1E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThD,OAAA;QACEyD,QAAQ,EAAEhC,OAAO,KAAKF,aAAa,CAACmC,MAAM,GAAG,CAAE;QAC/CF,OAAO,EAAEA,CAAA,KAAM9B,UAAU,CAAE0D,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAE;QAAAxC,QAAA,EACzC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACThD,OAAA;QAAQwD,OAAO,EAAEf,OAAQ;QAAAG,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEV;;EAEA;EACA,oBACEhD,OAAA;IAAK2C,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB5C,OAAA;MAAA4C,QAAA,gBACE5C,OAAA;QAAA4C,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BhD,OAAA;QAAA4C,QAAA,EAAG;MAA8C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACThD,OAAA;MAAS2C,SAAS,EAAC,OAAO;MAAAC,QAAA,EACvBtC,KAAK,CAACS,GAAG,CAAEqD,CAAC,iBACXpE,OAAA;QAAoBwD,OAAO,EAAEA,CAAA,KAAMrB,eAAe,CAACiC,CAAC,CAAC7D,GAAG,CAAE;QAACkD,QAAQ,EAAE/C,SAAS,CAACgD,MAAM,KAAK,CAAE;QAAAd,QAAA,EACzFwB,CAAC,CAAC5D;MAAK,GADG4D,CAAC,CAAC7D,GAAG;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACVhD,OAAA,CAACF,kBAAkB;MAACuF,QAAQ,EAAEpD;IAAsB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDhD,OAAA,CAACH,eAAe;MAACyF,KAAK,EAAEvD;IAAkB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7ChD,OAAA;MAAA4C,QAAA,gBACE5C,OAAA;QAAA4C,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BhD,OAAA;QAAA4C,QAAA,EACGlC,SAAS,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEuE,GAAG,kBACpBvF,OAAA;UAAA4C,QAAA,gBACE5C,OAAA;YAAA4C,QAAA,GAAI5B,CAAC,CAACC,IAAI,EAAC,GAAC;UAAA;YAAA4B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,EAAChC,CAAC,CAACqD,QAAQ,eAC5BrE,OAAA;YAAA4C,QAAA,EACG5B,CAAC,CAACsD,OAAO,CAACvD,GAAG,CAAC,CAACwD,GAAG,EAAEC,CAAC,kBACpBxE,OAAA;cAAA4C,QAAA,gBACE5C,OAAA;gBAAA4C,QAAA,GAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC4B,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,KAAC,EAACuB,GAAG,EAAC,GAAC,EAACvD,CAAC,CAAC+C,MAAM,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACS,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;YAAA,GADjFA,CAAC;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GAREuC,GAAG;UAAA1C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAAC7B,EAAA,CA7KuBD,GAAG;AAAAsE,EAAA,GAAHtE,GAAG;AAAA,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}