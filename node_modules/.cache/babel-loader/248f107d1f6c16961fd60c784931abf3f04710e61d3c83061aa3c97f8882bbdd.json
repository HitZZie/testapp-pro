{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javis\\\\Desktop\\\\Proyecto de Tests\\\\personal-testing-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AddQuestionForm from \"./AddQuestionForm\";\nimport ImportTxtQuestions from \"./ImportTxtQuestions\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction shuffle(arr) {\n  return [...arr].sort(() => Math.random() - 0.5);\n}\nconst MODOS = [{\n  key: \"examen\",\n  label: \"Simular Examen\"\n}, {\n  key: \"largo\",\n  label: \"Test Largo (50)\"\n}, {\n  key: \"corto\",\n  label: \"Test Corto (20)\"\n}, {\n  key: \"repaso\",\n  label: \"Modo Repaso\"\n}];\nfunction getTemas(questions) {\n  const temasUnicos = Array.from(new Set(questions.map(q => q.tema)));\n  return [\"Todos los temas\", ...temasUnicos];\n}\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [modo, setModo] = useState(null);\n  const [testQuestions, setTestQuestions] = useState([]);\n  const [current, setCurrent] = useState(0);\n  const [temaSeleccionado, setTemaSeleccionado] = useState(null);\n  const [pendingModo, setPendingModo] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [historial, setHistorial] = useState([]);\n  const handleAddQuestion = q => setQuestions(prev => [...prev, q]);\n  const handleImportQuestions = imported => setQuestions(prev => [...prev, ...imported]);\n  const handleAnswer = letra => {\n    setAnswers(prev => ({\n      ...prev,\n      [current]: letra\n    }));\n    const acierto = letra === testQuestions[current].answer;\n    setHistorial(prev => [...prev, {\n      pregunta: testQuestions[current],\n      acierto,\n      fecha: Date.now()\n    }]);\n  };\n\n  // Nuevo: Selección de tema antes de test largo/corto\n  const handleModoClick = modo => {\n    if (modo === \"largo\" || modo === \"corto\") {\n      setPendingModo(modo);\n      setTemaSeleccionado(\"Todos los temas\");\n    } else {\n      startTest(modo, \"Todos los temas\");\n    }\n  };\n  const startTest = (modo, tema) => {\n    let selected = [];\n    let pool = questions;\n    if (tema && tema !== \"Todos los temas\") {\n      pool = questions.filter(q => q.tema === tema);\n    }\n    if (modo === \"examen\") selected = shuffle(pool);\n    if (modo === \"largo\") selected = shuffle(pool).slice(0, 50);\n    if (modo === \"corto\") selected = shuffle(pool).slice(0, 20);\n    if (modo === \"repaso\") selected = shuffle(pool).slice(0, 10);\n    setTestQuestions(selected);\n    setCurrent(0);\n    setModo(modo);\n    setPendingModo(null);\n    setTemaSeleccionado(null);\n  };\n  const endTest = () => {\n    setModo(null);\n    setTestQuestions([]);\n    setCurrent(0);\n  };\n\n  // Render selector de tema si corresponde\n  if (pendingModo) {\n    const temas = getTemas(questions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecciona un tema para el test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: temaSeleccionado !== null && temaSeleccionado !== void 0 ? temaSeleccionado : \"Todos los temas\",\n        onChange: e => setTemaSeleccionado(e.target.value),\n        children: temas.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t,\n          children: t\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startTest(pendingModo, temaSeleccionado !== null && temaSeleccionado !== void 0 ? temaSeleccionado : \"Todos los temas\"),\n          disabled: !temaSeleccionado || temaSeleccionado !== \"Todos los temas\" && questions.filter(q => q.tema === temaSeleccionado).length === 0,\n          children: \"Empezar test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setPendingModo(null);\n            setTemaSeleccionado(null);\n          },\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render test mode\n  if (modo && testQuestions.length > 0) {\n    var _MODOS$find;\n    const q = testQuestions[current];\n    const userAnswer = answers[current];\n    const isCorrect = userAnswer && userAnswer === q.answer;\n    const totalAnswered = Object.keys(answers).length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [(_MODOS$find = MODOS.find(m => m.key === modo)) === null || _MODOS$find === void 0 ? void 0 : _MODOS$find.label, \" \\u2014 Pregunta \", current + 1, \" de \", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [q.tema, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), \" \", q.question, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: q.options.map((opt, i) => {\n            const letra = [\"A\", \"B\", \"C\", \"D\"][i];\n            let color = \"\";\n            if (userAnswer) {\n              if (letra === q.answer) color = \"#4caf50\"; // verde correcta\n              if (letra === userAnswer && userAnswer !== q.answer) color = \"#e57373\"; // rojo fallada\n            }\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                background: color,\n                padding: \"0.5em\",\n                borderRadius: 6,\n                margin: \"0.2em 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: !!userAnswer,\n                style: {\n                  background: \"none\",\n                  border: \"none\",\n                  color: \"inherit\",\n                  fontWeight: \"bold\",\n                  cursor: userAnswer ? \"default\" : \"pointer\",\n                  fontSize: \"1em\"\n                },\n                onClick: () => handleAnswer(letra),\n                children: [letra, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this), \" \", opt, userAnswer && letra === q.answer ? \" ✅\" : \"\", userAnswer && letra === userAnswer && userAnswer !== q.answer ? \" ❌\" : \"\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), userAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"1em 0\",\n          fontWeight: \"bold\"\n        },\n        children: isCorrect ? \"¡Correcto!\" : `Incorrecto. Respuesta correcta: ${q.answer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Preguntas respondidas: \", totalAnswered, \" / \", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: current === 0,\n        onClick: () => setCurrent(c => c - 1),\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: current === testQuestions.length - 1,\n        onClick: () => setCurrent(c => c + 1),\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endTest,\n        children: \"Salir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  const total = historial.length;\n  const aciertos = historial.filter(h => h.acierto).length;\n  const porcentajeGlobal = total ? Math.round(aciertos / total * 100) : 0;\n\n  // Por tema (últimas 100 respuestas)\n  function porcentajeTema(tema) {\n    const ultimas = historial.filter(h => h.pregunta.tema === tema).slice(-100);\n    const aciertosTema = ultimas.filter(h => h.acierto).length;\n    return ultimas.length ? Math.round(aciertosTema / ultimas.length * 100) : 0;\n  }\n\n  // Pantalla principal\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"App Personal de Tests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Selecciona un modo de test o revisa los temas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"modos\",\n      children: MODOS.map(m => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModoClick(m.key),\n        disabled: questions.length === 0,\n        children: m.label\n      }, m.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ImportTxtQuestions, {\n      onImport: handleImportQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddQuestionForm, {\n      onAdd: handleAddQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preguntas a\\xF1adidas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [q.tema, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), \" \", q.question, /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: q.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: [[\"A\", \"B\", \"C\", \"D\"][i], \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 21\n              }, this), \" \", opt, \" \", q.answer === [\"A\", \"B\", \"C\", \"D\"][i] ? \"✅\" : \"\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Estad\\xEDsticas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Progreso global: \", porcentajeGlobal, \"% aciertos (\", aciertos, \"/\", total, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Por tema (\\xFAltimas 100):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: getTemas(questions).filter(t => t !== \"Todos los temas\").map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [t, \": \", porcentajeTema(t), \"%\"]\n          }, t, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 187,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oe7jlNCMdJW9pZkdZGPh9HgW9b0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddQuestionForm","ImportTxtQuestions","jsxDEV","_jsxDEV","shuffle","arr","sort","Math","random","MODOS","key","label","getTemas","questions","temasUnicos","Array","from","Set","map","q","tema","App","_s","setQuestions","modo","setModo","testQuestions","setTestQuestions","current","setCurrent","temaSeleccionado","setTemaSeleccionado","pendingModo","setPendingModo","answers","setAnswers","historial","setHistorial","handleAddQuestion","prev","handleImportQuestions","imported","handleAnswer","letra","acierto","answer","pregunta","fecha","Date","now","handleModoClick","startTest","selected","pool","filter","slice","endTest","temas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","t","style","marginTop","onClick","disabled","length","_MODOS$find","userAnswer","isCorrect","totalAnswered","Object","keys","find","m","question","options","opt","i","color","background","padding","borderRadius","margin","border","fontWeight","cursor","fontSize","c","total","aciertos","h","porcentajeGlobal","round","porcentajeTema","ultimas","aciertosTema","onImport","onAdd","idx","_c","$RefreshReg$"],"sources":["C:/Users/javis/Desktop/Proyecto de Tests/personal-testing-app/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Question } from \"./types\";\nimport AddQuestionForm from \"./AddQuestionForm\";\nimport ImportTxtQuestions from \"./ImportTxtQuestions\";\nimport \"./App.css\";\n\nfunction shuffle<T>(arr: T[]): T[] {\n  return [...arr].sort(() => Math.random() - 0.5);\n}\n\nconst MODOS = [\n  { key: \"examen\", label: \"Simular Examen\" },\n  { key: \"largo\", label: \"Test Largo (50)\" },\n  { key: \"corto\", label: \"Test Corto (20)\" },\n  { key: \"repaso\", label: \"Modo Repaso\" },\n];\n\nfunction getTemas(questions: Question[]) {\n  const temasUnicos = Array.from(new Set(questions.map(q => q.tema)));\n  return [\"Todos los temas\", ...temasUnicos];\n}\n\nexport default function App() {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [modo, setModo] = useState<string | null>(null);\n  const [testQuestions, setTestQuestions] = useState<Question[]>([]);\n  const [current, setCurrent] = useState(0);\n  const [temaSeleccionado, setTemaSeleccionado] = useState<string | null>(null);\n  const [pendingModo, setPendingModo] = useState<string | null>(null);\n  const [answers, setAnswers] = useState<{ [index: number]: string }>({});\n  const [historial, setHistorial] = useState<Array<{ pregunta: Question, acierto: boolean, fecha: number }>>([]);\n\n  const handleAddQuestion = (q: Question) => setQuestions((prev) => [...prev, q]);\n  const handleImportQuestions = (imported: Question[]) => setQuestions((prev) => [...prev, ...imported]);\n\n  const handleAnswer = (letra: string) => {\n    setAnswers((prev) => ({ ...prev, [current]: letra }));\n    const acierto = letra === testQuestions[current].answer;\n    setHistorial((prev) => [\n      ...prev,\n      { pregunta: testQuestions[current], acierto, fecha: Date.now() },\n    ]);\n  };\n\n  // Nuevo: Selección de tema antes de test largo/corto\n  const handleModoClick = (modo: string) => {\n    if (modo === \"largo\" || modo === \"corto\") {\n      setPendingModo(modo);\n      setTemaSeleccionado(\"Todos los temas\");\n    } else {\n      startTest(modo, \"Todos los temas\");\n    }\n  };\n\n  const startTest = (modo: string, tema: string) => {\n    let selected: Question[] = [];\n    let pool = questions;\n    if (tema && tema !== \"Todos los temas\") {\n      pool = questions.filter(q => q.tema === tema);\n    }\n    if (modo === \"examen\") selected = shuffle(pool);\n    if (modo === \"largo\") selected = shuffle(pool).slice(0, 50);\n    if (modo === \"corto\") selected = shuffle(pool).slice(0, 20);\n    if (modo === \"repaso\") selected = shuffle(pool).slice(0, 10);\n    setTestQuestions(selected);\n    setCurrent(0);\n    setModo(modo);\n    setPendingModo(null);\n    setTemaSeleccionado(null);\n  };\n\n  const endTest = () => {\n    setModo(null);\n    setTestQuestions([]);\n    setCurrent(0);\n  };\n\n  // Render selector de tema si corresponde\n  if (pendingModo) {\n    const temas = getTemas(questions);\n    return (\n      <div className=\"App\">\n        <h2>Selecciona un tema para el test</h2>\n        <select value={temaSeleccionado ?? \"Todos los temas\"} onChange={e => setTemaSeleccionado(e.target.value)}>\n          {temas.map(t => (\n            <option key={t} value={t}>{t}</option>\n          ))}\n        </select>\n        <div style={{ marginTop: 16 }}>\n          <button\n            onClick={() => startTest(pendingModo, temaSeleccionado ?? \"Todos los temas\")}\n            disabled={\n              !temaSeleccionado ||\n              (temaSeleccionado !== \"Todos los temas\" && questions.filter(q => q.tema === temaSeleccionado).length === 0)\n            }\n          >\n            Empezar test\n          </button>\n          <button onClick={() => { setPendingModo(null); setTemaSeleccionado(null); }}>Cancelar</button>\n        </div>\n      </div>\n    );\n  }\n\n  // Render test mode\n  if (modo && testQuestions.length > 0) {\n    const q = testQuestions[current];\n    const userAnswer = answers[current];\n    const isCorrect = userAnswer && userAnswer === q.answer;\n    const totalAnswered = Object.keys(answers).length;\n    return (\n      <div className=\"App\">\n        <h2>\n          {MODOS.find((m) => m.key === modo)?.label} — Pregunta {current + 1} de {testQuestions.length}\n        </h2>\n        <div>\n          <b>{q.tema}:</b> {q.question}\n          <ul>\n            {q.options.map((opt, i) => {\n              const letra = [\"A\", \"B\", \"C\", \"D\"][i];\n              let color = \"\";\n              if (userAnswer) {\n                if (letra === q.answer) color = \"#4caf50\"; // verde correcta\n                if (letra === userAnswer && userAnswer !== q.answer) color = \"#e57373\"; // rojo fallada\n              }\n              return (\n                <li key={i} style={{ background: color, padding: \"0.5em\", borderRadius: 6, margin: \"0.2em 0\" }}>\n                  <button\n                    disabled={!!userAnswer}\n                    style={{\n                      background: \"none\",\n                      border: \"none\",\n                      color: \"inherit\",\n                      fontWeight: \"bold\",\n                      cursor: userAnswer ? \"default\" : \"pointer\",\n                      fontSize: \"1em\",\n                    }}\n                    onClick={() => handleAnswer(letra)}\n                  >\n                    {letra}:\n                  </button>{\" \"}\n                  {opt}\n                  {userAnswer && letra === q.answer ? \" ✅\" : \"\"}\n                  {userAnswer && letra === userAnswer && userAnswer !== q.answer ? \" ❌\" : \"\"}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        {userAnswer && (\n          <div style={{ margin: \"1em 0\", fontWeight: \"bold\" }}>\n            {isCorrect ? \"¡Correcto!\" : `Incorrecto. Respuesta correcta: ${q.answer}`}\n          </div>\n        )}\n        <div>\n          Preguntas respondidas: {totalAnswered} / {testQuestions.length}\n        </div>\n        <button disabled={current === 0} onClick={() => setCurrent((c) => c - 1)}>\n          Anterior\n        </button>\n        <button\n          disabled={current === testQuestions.length - 1}\n          onClick={() => setCurrent((c) => c + 1)}\n        >\n          Siguiente\n        </button>\n        <button onClick={endTest}>Salir</button>\n      </div>\n    );\n  }\n\n  const total = historial.length;\n  const aciertos = historial.filter(h => h.acierto).length;\n  const porcentajeGlobal = total ? Math.round((aciertos / total) * 100) : 0;\n\n  // Por tema (últimas 100 respuestas)\n  function porcentajeTema(tema: string) {\n    const ultimas = historial\n      .filter(h => h.pregunta.tema === tema)\n      .slice(-100);\n    const aciertosTema = ultimas.filter(h => h.acierto).length;\n    return ultimas.length ? Math.round((aciertosTema / ultimas.length) * 100) : 0;\n  }\n\n  // Pantalla principal\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>App Personal de Tests</h1>\n        <p>Selecciona un modo de test o revisa los temas:</p>\n      </header>\n      <section className=\"modos\">\n        {MODOS.map((m) => (\n          <button key={m.key} onClick={() => handleModoClick(m.key)} disabled={questions.length === 0}>\n            {m.label}\n          </button>\n        ))}\n      </section>\n      <ImportTxtQuestions onImport={handleImportQuestions} />\n      <AddQuestionForm onAdd={handleAddQuestion} />\n      <section>\n        <h2>Preguntas añadidas</h2>\n        <ul>\n          {questions.map((q, idx) => (\n            <li key={idx}>\n              <b>{q.tema}:</b> {q.question}\n              <ul>\n                {q.options.map((opt, i) => (\n                  <li key={i}>\n                    <b>{[\"A\", \"B\", \"C\", \"D\"][i]}:</b> {opt} {q.answer === [\"A\", \"B\", \"C\", \"D\"][i] ? \"✅\" : \"\"}\n                  </li>\n                ))}\n              </ul>\n            </li>\n          ))}\n        </ul>\n      </section>\n      <section>\n        <h2>Estadísticas</h2>\n        <div>Progreso global: {porcentajeGlobal}% aciertos ({aciertos}/{total})</div>\n        <div>\n          <b>Por tema (últimas 100):</b>\n          <ul>\n            {getTemas(questions)\n              .filter(t => t !== \"Todos los temas\")\n              .map(t => (\n                <li key={t}>\n                  {t}: {porcentajeTema(t)}%\n                </li>\n              ))}\n          </ul>\n        </div>\n      </section>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,OAAOA,CAAIC,GAAQ,EAAO;EACjC,OAAO,CAAC,GAAGA,GAAG,CAAC,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;AACjD;AAEA,MAAMC,KAAK,GAAG,CACZ;EAAEC,GAAG,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAiB,CAAC,EAC1C;EAAED,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAkB,CAAC,EAC1C;EAAED,GAAG,EAAE,OAAO;EAAEC,KAAK,EAAE;AAAkB,CAAC,EAC1C;EAAED,GAAG,EAAE,QAAQ;EAAEC,KAAK,EAAE;AAAc,CAAC,CACxC;AAED,SAASC,QAAQA,CAACC,SAAqB,EAAE;EACvC,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACJ,SAAS,CAACK,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC;EACnE,OAAO,CAAC,iBAAiB,EAAE,GAAGN,WAAW,CAAC;AAC5C;AAEA,eAAe,SAASO,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACT,SAAS,EAAEU,YAAY,CAAC,GAAGxB,QAAQ,CAAa,EAAE,CAAC;EAC1D,MAAM,CAACyB,IAAI,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAgB,IAAI,CAAC;EACrD,MAAM,CAAC2B,aAAa,EAAEC,gBAAgB,CAAC,GAAG5B,QAAQ,CAAa,EAAE,CAAC;EAClE,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAAC+B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAgB,IAAI,CAAC;EAC7E,MAAM,CAACiC,WAAW,EAAEC,cAAc,CAAC,GAAGlC,QAAQ,CAAgB,IAAI,CAAC;EACnE,MAAM,CAACmC,OAAO,EAAEC,UAAU,CAAC,GAAGpC,QAAQ,CAA8B,CAAC,CAAC,CAAC;EACvE,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAiE,EAAE,CAAC;EAE9G,MAAMuC,iBAAiB,GAAInB,CAAW,IAAKI,YAAY,CAAEgB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEpB,CAAC,CAAC,CAAC;EAC/E,MAAMqB,qBAAqB,GAAIC,QAAoB,IAAKlB,YAAY,CAAEgB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE,GAAGE,QAAQ,CAAC,CAAC;EAEtG,MAAMC,YAAY,GAAIC,KAAa,IAAK;IACtCR,UAAU,CAAEI,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACX,OAAO,GAAGe;IAAM,CAAC,CAAC,CAAC;IACrD,MAAMC,OAAO,GAAGD,KAAK,KAAKjB,aAAa,CAACE,OAAO,CAAC,CAACiB,MAAM;IACvDR,YAAY,CAAEE,IAAI,IAAK,CACrB,GAAGA,IAAI,EACP;MAAEO,QAAQ,EAAEpB,aAAa,CAACE,OAAO,CAAC;MAAEgB,OAAO;MAAEG,KAAK,EAAEC,IAAI,CAACC,GAAG,CAAC;IAAE,CAAC,CACjE,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,eAAe,GAAI1B,IAAY,IAAK;IACxC,IAAIA,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,OAAO,EAAE;MACxCS,cAAc,CAACT,IAAI,CAAC;MACpBO,mBAAmB,CAAC,iBAAiB,CAAC;IACxC,CAAC,MAAM;MACLoB,SAAS,CAAC3B,IAAI,EAAE,iBAAiB,CAAC;IACpC;EACF,CAAC;EAED,MAAM2B,SAAS,GAAGA,CAAC3B,IAAY,EAAEJ,IAAY,KAAK;IAChD,IAAIgC,QAAoB,GAAG,EAAE;IAC7B,IAAIC,IAAI,GAAGxC,SAAS;IACpB,IAAIO,IAAI,IAAIA,IAAI,KAAK,iBAAiB,EAAE;MACtCiC,IAAI,GAAGxC,SAAS,CAACyC,MAAM,CAACnC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKA,IAAI,CAAC;IAC/C;IACA,IAAII,IAAI,KAAK,QAAQ,EAAE4B,QAAQ,GAAGhD,OAAO,CAACiD,IAAI,CAAC;IAC/C,IAAI7B,IAAI,KAAK,OAAO,EAAE4B,QAAQ,GAAGhD,OAAO,CAACiD,IAAI,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3D,IAAI/B,IAAI,KAAK,OAAO,EAAE4B,QAAQ,GAAGhD,OAAO,CAACiD,IAAI,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC3D,IAAI/B,IAAI,KAAK,QAAQ,EAAE4B,QAAQ,GAAGhD,OAAO,CAACiD,IAAI,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;IAC5D5B,gBAAgB,CAACyB,QAAQ,CAAC;IAC1BvB,UAAU,CAAC,CAAC,CAAC;IACbJ,OAAO,CAACD,IAAI,CAAC;IACbS,cAAc,CAAC,IAAI,CAAC;IACpBF,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMyB,OAAO,GAAGA,CAAA,KAAM;IACpB/B,OAAO,CAAC,IAAI,CAAC;IACbE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,UAAU,CAAC,CAAC,CAAC;EACf,CAAC;;EAED;EACA,IAAIG,WAAW,EAAE;IACf,MAAMyB,KAAK,GAAG7C,QAAQ,CAACC,SAAS,CAAC;IACjC,oBACEV,OAAA;MAAKuD,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBxD,OAAA;QAAAwD,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxC5D,OAAA;QAAQ6D,KAAK,EAAElC,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI,iBAAkB;QAACmC,QAAQ,EAAEC,CAAC,IAAInC,mBAAmB,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,EACtGF,KAAK,CAACvC,GAAG,CAACkD,CAAC,iBACVjE,OAAA;UAAgB6D,KAAK,EAAEI,CAAE;UAAAT,QAAA,EAAES;QAAC,GAAfA,CAAC;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAuB,CACtC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACT5D,OAAA;QAAKkE,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAG,CAAE;QAAAX,QAAA,gBAC5BxD,OAAA;UACEoE,OAAO,EAAEA,CAAA,KAAMpB,SAAS,CAACnB,WAAW,EAAEF,gBAAgB,aAAhBA,gBAAgB,cAAhBA,gBAAgB,GAAI,iBAAiB,CAAE;UAC7E0C,QAAQ,EACN,CAAC1C,gBAAgB,IAChBA,gBAAgB,KAAK,iBAAiB,IAAIjB,SAAS,CAACyC,MAAM,CAACnC,CAAC,IAAIA,CAAC,CAACC,IAAI,KAAKU,gBAAgB,CAAC,CAAC2C,MAAM,KAAK,CAC1G;UAAAd,QAAA,EACF;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT5D,OAAA;UAAQoE,OAAO,EAAEA,CAAA,KAAM;YAAEtC,cAAc,CAAC,IAAI,CAAC;YAAEF,mBAAmB,CAAC,IAAI,CAAC;UAAE,CAAE;UAAA4B,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3F,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;;EAEA;EACA,IAAIvC,IAAI,IAAIE,aAAa,CAAC+C,MAAM,GAAG,CAAC,EAAE;IAAA,IAAAC,WAAA;IACpC,MAAMvD,CAAC,GAAGO,aAAa,CAACE,OAAO,CAAC;IAChC,MAAM+C,UAAU,GAAGzC,OAAO,CAACN,OAAO,CAAC;IACnC,MAAMgD,SAAS,GAAGD,UAAU,IAAIA,UAAU,KAAKxD,CAAC,CAAC0B,MAAM;IACvD,MAAMgC,aAAa,GAAGC,MAAM,CAACC,IAAI,CAAC7C,OAAO,CAAC,CAACuC,MAAM;IACjD,oBACEtE,OAAA;MAAKuD,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBxD,OAAA;QAAAwD,QAAA,IAAAe,WAAA,GACGjE,KAAK,CAACuE,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACvE,GAAG,KAAKc,IAAI,CAAC,cAAAkD,WAAA,uBAAjCA,WAAA,CAAmC/D,KAAK,EAAC,mBAAY,EAACiB,OAAO,GAAG,CAAC,EAAC,MAAI,EAACF,aAAa,CAAC+C,MAAM;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1F,CAAC,eACL5D,OAAA;QAAAwD,QAAA,gBACExD,OAAA;UAAAwD,QAAA,GAAIxC,CAAC,CAACC,IAAI,EAAC,GAAC;QAAA;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAAC,EAAC5C,CAAC,CAAC+D,QAAQ,eAC5B/E,OAAA;UAAAwD,QAAA,EACGxC,CAAC,CAACgE,OAAO,CAACjE,GAAG,CAAC,CAACkE,GAAG,EAAEC,CAAC,KAAK;YACzB,MAAM1C,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC0C,CAAC,CAAC;YACrC,IAAIC,KAAK,GAAG,EAAE;YACd,IAAIX,UAAU,EAAE;cACd,IAAIhC,KAAK,KAAKxB,CAAC,CAAC0B,MAAM,EAAEyC,KAAK,GAAG,SAAS,CAAC,CAAC;cAC3C,IAAI3C,KAAK,KAAKgC,UAAU,IAAIA,UAAU,KAAKxD,CAAC,CAAC0B,MAAM,EAAEyC,KAAK,GAAG,SAAS,CAAC,CAAC;YAC1E;YACA,oBACEnF,OAAA;cAAYkE,KAAK,EAAE;gBAAEkB,UAAU,EAAED,KAAK;gBAAEE,OAAO,EAAE,OAAO;gBAAEC,YAAY,EAAE,CAAC;gBAAEC,MAAM,EAAE;cAAU,CAAE;cAAA/B,QAAA,gBAC7FxD,OAAA;gBACEqE,QAAQ,EAAE,CAAC,CAACG,UAAW;gBACvBN,KAAK,EAAE;kBACLkB,UAAU,EAAE,MAAM;kBAClBI,MAAM,EAAE,MAAM;kBACdL,KAAK,EAAE,SAAS;kBAChBM,UAAU,EAAE,MAAM;kBAClBC,MAAM,EAAElB,UAAU,GAAG,SAAS,GAAG,SAAS;kBAC1CmB,QAAQ,EAAE;gBACZ,CAAE;gBACFvB,OAAO,EAAEA,CAAA,KAAM7B,YAAY,CAACC,KAAK,CAAE;gBAAAgB,QAAA,GAElChB,KAAK,EAAC,GACT;cAAA;gBAAAiB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAAC,GAAG,EACZqB,GAAG,EACHT,UAAU,IAAIhC,KAAK,KAAKxB,CAAC,CAAC0B,MAAM,GAAG,IAAI,GAAG,EAAE,EAC5C8B,UAAU,IAAIhC,KAAK,KAAKgC,UAAU,IAAIA,UAAU,KAAKxD,CAAC,CAAC0B,MAAM,GAAG,IAAI,GAAG,EAAE;YAAA,GAjBnEwC,CAAC;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAkBN,CAAC;UAET,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,EACLY,UAAU,iBACTxE,OAAA;QAAKkE,KAAK,EAAE;UAAEqB,MAAM,EAAE,OAAO;UAAEE,UAAU,EAAE;QAAO,CAAE;QAAAjC,QAAA,EACjDiB,SAAS,GAAG,YAAY,GAAG,mCAAmCzD,CAAC,CAAC0B,MAAM;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtE,CACN,eACD5D,OAAA;QAAAwD,QAAA,GAAK,yBACoB,EAACkB,aAAa,EAAC,KAAG,EAACnD,aAAa,CAAC+C,MAAM;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACN5D,OAAA;QAAQqE,QAAQ,EAAE5C,OAAO,KAAK,CAAE;QAAC2C,OAAO,EAAEA,CAAA,KAAM1C,UAAU,CAAEkE,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAE;QAAApC,QAAA,EAAC;MAE1E;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5D,OAAA;QACEqE,QAAQ,EAAE5C,OAAO,KAAKF,aAAa,CAAC+C,MAAM,GAAG,CAAE;QAC/CF,OAAO,EAAEA,CAAA,KAAM1C,UAAU,CAAEkE,CAAC,IAAKA,CAAC,GAAG,CAAC,CAAE;QAAApC,QAAA,EACzC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT5D,OAAA;QAAQoE,OAAO,EAAEf,OAAQ;QAAAG,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAEV;EAEA,MAAMiC,KAAK,GAAG5D,SAAS,CAACqC,MAAM;EAC9B,MAAMwB,QAAQ,GAAG7D,SAAS,CAACkB,MAAM,CAAC4C,CAAC,IAAIA,CAAC,CAACtD,OAAO,CAAC,CAAC6B,MAAM;EACxD,MAAM0B,gBAAgB,GAAGH,KAAK,GAAGzF,IAAI,CAAC6F,KAAK,CAAEH,QAAQ,GAAGD,KAAK,GAAI,GAAG,CAAC,GAAG,CAAC;;EAEzE;EACA,SAASK,cAAcA,CAACjF,IAAY,EAAE;IACpC,MAAMkF,OAAO,GAAGlE,SAAS,CACtBkB,MAAM,CAAC4C,CAAC,IAAIA,CAAC,CAACpD,QAAQ,CAAC1B,IAAI,KAAKA,IAAI,CAAC,CACrCmC,KAAK,CAAC,CAAC,GAAG,CAAC;IACd,MAAMgD,YAAY,GAAGD,OAAO,CAAChD,MAAM,CAAC4C,CAAC,IAAIA,CAAC,CAACtD,OAAO,CAAC,CAAC6B,MAAM;IAC1D,OAAO6B,OAAO,CAAC7B,MAAM,GAAGlE,IAAI,CAAC6F,KAAK,CAAEG,YAAY,GAAGD,OAAO,CAAC7B,MAAM,GAAI,GAAG,CAAC,GAAG,CAAC;EAC/E;;EAEA;EACA,oBACEtE,OAAA;IAAKuD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxD,OAAA;MAAAwD,QAAA,gBACExD,OAAA;QAAAwD,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9B5D,OAAA;QAAAwD,QAAA,EAAG;MAA8C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACT5D,OAAA;MAASuD,SAAS,EAAC,OAAO;MAAAC,QAAA,EACvBlD,KAAK,CAACS,GAAG,CAAE+D,CAAC,iBACX9E,OAAA;QAAoBoE,OAAO,EAAEA,CAAA,KAAMrB,eAAe,CAAC+B,CAAC,CAACvE,GAAG,CAAE;QAAC8D,QAAQ,EAAE3D,SAAS,CAAC4D,MAAM,KAAK,CAAE;QAAAd,QAAA,EACzFsB,CAAC,CAACtE;MAAK,GADGsE,CAAC,CAACvE,GAAG;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,eACV5D,OAAA,CAACF,kBAAkB;MAACuG,QAAQ,EAAEhE;IAAsB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvD5D,OAAA,CAACH,eAAe;MAACyG,KAAK,EAAEnE;IAAkB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7C5D,OAAA;MAAAwD,QAAA,gBACExD,OAAA;QAAAwD,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B5D,OAAA;QAAAwD,QAAA,EACG9C,SAAS,CAACK,GAAG,CAAC,CAACC,CAAC,EAAEuF,GAAG,kBACpBvG,OAAA;UAAAwD,QAAA,gBACExD,OAAA;YAAAwD,QAAA,GAAIxC,CAAC,CAACC,IAAI,EAAC,GAAC;UAAA;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,KAAC,EAAC5C,CAAC,CAAC+D,QAAQ,eAC5B/E,OAAA;YAAAwD,QAAA,EACGxC,CAAC,CAACgE,OAAO,CAACjE,GAAG,CAAC,CAACkE,GAAG,EAAEC,CAAC,kBACpBlF,OAAA;cAAAwD,QAAA,gBACExD,OAAA;gBAAAwD,QAAA,GAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC0B,CAAC,CAAC,EAAC,GAAC;cAAA;gBAAAzB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAG,CAAC,KAAC,EAACqB,GAAG,EAAC,GAAC,EAACjE,CAAC,CAAC0B,MAAM,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACwC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;YAAA,GADjFA,CAAC;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA,GARE2C,GAAG;UAAA9C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASR,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACV5D,OAAA;MAAAwD,QAAA,gBACExD,OAAA;QAAAwD,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrB5D,OAAA;QAAAwD,QAAA,GAAK,mBAAiB,EAACwC,gBAAgB,EAAC,cAAY,EAACF,QAAQ,EAAC,GAAC,EAACD,KAAK,EAAC,GAAC;MAAA;QAAApC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7E5D,OAAA;QAAAwD,QAAA,gBACExD,OAAA;UAAAwD,QAAA,EAAG;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC9B5D,OAAA;UAAAwD,QAAA,EACG/C,QAAQ,CAACC,SAAS,CAAC,CACjByC,MAAM,CAACc,CAAC,IAAIA,CAAC,KAAK,iBAAiB,CAAC,CACpClD,GAAG,CAACkD,CAAC,iBACJjE,OAAA;YAAAwD,QAAA,GACGS,CAAC,EAAC,IAAE,EAACiC,cAAc,CAACjC,CAAC,CAAC,EAAC,GAC1B;UAAA,GAFSA,CAAC;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEN,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACzC,EAAA,CArNuBD,GAAG;AAAAsF,EAAA,GAAHtF,GAAG;AAAA,IAAAsF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}