{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javis\\\\Desktop\\\\Proyecto de Tests\\\\personal-testing-app\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport AddQuestionForm from \"./AddQuestionForm\";\nimport ImportTxtQuestions from \"./ImportTxtQuestions\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction shuffle(arr) {\n  return [...arr].sort(() => Math.random() - 0.5);\n}\nconst MODOS = [{\n  key: \"examen\",\n  label: \"Simular Examen\"\n}, {\n  key: \"largo\",\n  label: \"Test Largo (50)\"\n}, {\n  key: \"corto\",\n  label: \"Test Corto (20)\"\n}, {\n  key: \"repaso\",\n  label: \"Modo Repaso\"\n}];\nfunction getTemas(questions) {\n  const temasUnicos = Array.from(new Set(questions.map(q => q.tema)));\n  return [\"Todos los temas\", ...temasUnicos];\n}\nexport default function App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [modo, setModo] = useState(null);\n  const [testQuestions, setTestQuestions] = useState([]);\n  const [current, setCurrent] = useState(0);\n  const [temaSeleccionado, setTemaSeleccionado] = useState(null);\n  const [pendingModo, setPendingModo] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const [historial, setHistorial] = useState([]);\n  const [pestana, setPestana] = useState(\"test\");\n  const [mostrarAgregar, setMostrarAgregar] = useState(false);\n  const handleAddQuestion = q => setQuestions(prev => [...prev, q]);\n  const handleImportQuestions = imported => setQuestions(prev => [...prev, ...imported]);\n  const handleAnswer = letra => {\n    setAnswers(prev => ({\n      ...prev,\n      [current]: letra\n    }));\n    const acierto = letra === testQuestions[current].answer;\n    setHistorial(prev => [...prev, {\n      pregunta: testQuestions[current],\n      acierto,\n      fecha: Date.now()\n    }]);\n  };\n\n  // Estadísticas\n  const total = historial.length;\n  const aciertos = historial.filter(h => h.acierto).length;\n  const porcentajeGlobal = total ? Math.round(aciertos / total * 100) : 0;\n  function porcentajeTema(tema) {\n    const ultimas = historial.filter(h => h.pregunta.tema === tema).slice(-100);\n    const aciertosTema = ultimas.filter(h => h.acierto).length;\n    return ultimas.length ? Math.round(aciertosTema / ultimas.length * 100) : 0;\n  }\n\n  // Modo repaso inteligente\n  const startTest = (modo, tema) => {\n    let pool = questions;\n    if (tema && tema !== \"Todos los temas\") {\n      pool = questions.filter(q => q.tema === tema);\n    }\n    let selected = [];\n    if (modo === \"repaso\") {\n      const falloCount = {};\n      historial.forEach(h => {\n        const key = h.pregunta.question + \"|\" + h.pregunta.tema;\n        if (!h.acierto) falloCount[key] = (falloCount[key] || 0) + 1;\n      });\n      selected = [...pool].sort((a, b) => {\n        const ka = a.question + \"|\" + a.tema;\n        const kb = b.question + \"|\" + b.tema;\n        return (falloCount[kb] || 0) - (falloCount[ka] || 0);\n      }).slice(0, 20);\n    } else if (modo === \"examen\") selected = shuffle(pool);else if (modo === \"largo\") selected = shuffle(pool).slice(0, 50);else if (modo === \"corto\") selected = shuffle(pool).slice(0, 20);\n    setTestQuestions(selected);\n    setCurrent(0);\n    setModo(modo);\n    setPendingModo(null);\n    setTemaSeleccionado(null);\n    setAnswers({});\n  };\n  const handleModoClick = modo => {\n    if (modo === \"largo\" || modo === \"corto\") {\n      setPendingModo(modo);\n      setTemaSeleccionado(\"Todos los temas\");\n    } else {\n      startTest(modo, \"Todos los temas\");\n    }\n  };\n  const endTest = () => {\n    setModo(null);\n    setTestQuestions([]);\n    setCurrent(0);\n    setAnswers({});\n  };\n\n  // Selector de tema para test largo/corto\n  if (pendingModo) {\n    const temas = getTemas(questions);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Selecciona un tema para el test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: temaSeleccionado !== null && temaSeleccionado !== void 0 ? temaSeleccionado : \"Todos los temas\",\n        onChange: e => setTemaSeleccionado(e.target.value),\n        children: temas.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t,\n          children: t\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 16\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => startTest(pendingModo, temaSeleccionado !== null && temaSeleccionado !== void 0 ? temaSeleccionado : \"Todos los temas\"),\n          disabled: !temaSeleccionado || temaSeleccionado !== \"Todos los temas\" && questions.filter(q => q.tema === temaSeleccionado).length === 0,\n          children: \"Empezar test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setPendingModo(null);\n            setTemaSeleccionado(null);\n          },\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Render test mode\n  if (modo && testQuestions.length > 0) {\n    var _MODOS$find;\n    const q = testQuestions[current];\n    const userAnswer = answers[current];\n    const isCorrect = userAnswer && userAnswer === q.answer;\n    const totalAnswered = Object.keys(answers).length;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [(_MODOS$find = MODOS.find(m => m.key === modo)) === null || _MODOS$find === void 0 ? void 0 : _MODOS$find.label, \" \\u2014 Pregunta \", current + 1, \" de \", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [q.tema, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), \" \", q.question, /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: q.options.map((opt, i) => {\n            const letra = [\"A\", \"B\", \"C\", \"D\"][i];\n            let color = \"\";\n            if (userAnswer) {\n              if (letra === q.answer) color = \"#4caf50\";\n              if (letra === userAnswer && userAnswer !== q.answer) color = \"#e57373\";\n            }\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                background: color,\n                padding: \"0.5em\",\n                borderRadius: 6,\n                margin: \"0.2em 0\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                disabled: !!userAnswer,\n                style: {\n                  background: \"none\",\n                  border: \"none\",\n                  color: \"inherit\",\n                  fontWeight: \"bold\",\n                  cursor: userAnswer ? \"default\" : \"pointer\",\n                  fontSize: \"1em\"\n                },\n                onClick: () => handleAnswer(letra),\n                children: [letra, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), \" \", opt, userAnswer && letra === q.answer ? \" ✅\" : \"\", userAnswer && letra === userAnswer && userAnswer !== q.answer ? \" ❌\" : \"\"]\n            }, i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), userAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"1em 0\",\n          fontWeight: \"bold\"\n        },\n        children: isCorrect ? \"¡Correcto!\" : `Incorrecto. Respuesta correcta: ${q.answer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Preguntas respondidas: \", totalAnswered, \" / \", testQuestions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: current === 0,\n        onClick: () => setCurrent(c => c - 1),\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: current === testQuestions.length - 1,\n        onClick: () => setCurrent(c => c + 1),\n        children: \"Siguiente\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endTest,\n        children: \"Salir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Pantalla principal con pestañas\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 24\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPestana(\"test\"),\n        children: \"Modo Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPestana(\"preguntas\"),\n        children: \"Preguntas a\\xF1adidas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPestana(\"estadisticas\"),\n        children: \"Estad\\xEDsticas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), pestana === \"test\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setMostrarAgregar(v => !v),\n        children: mostrarAgregar ? \"Cerrar menú de añadir preguntas\" : \"Añadir preguntas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), mostrarAgregar && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ImportTxtQuestions, {\n          onImport: handleImportQuestions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(AddQuestionForm, {\n          onAdd: handleAddQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true), pestana === \"preguntas\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Preguntas a\\xF1adidas (\", questions.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [q.tema, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), \" \", q.question]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), pestana === \"estadisticas\" && /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Estad\\xEDsticas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Total preguntas: \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"e1mV6CAeJMO0Bmdo1ti6PIwd98w=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","AddQuestionForm","ImportTxtQuestions","jsxDEV","_jsxDEV","Fragment","_Fragment","shuffle","arr","sort","Math","random","MODOS","key","label","getTemas","questions","temasUnicos","Array","from","Set","map","q","tema","App","_s","setQuestions","modo","setModo","testQuestions","setTestQuestions","current","setCurrent","temaSeleccionado","setTemaSeleccionado","pendingModo","setPendingModo","answers","setAnswers","historial","setHistorial","pestana","setPestana","mostrarAgregar","setMostrarAgregar","handleAddQuestion","prev","handleImportQuestions","imported","handleAnswer","letra","acierto","answer","pregunta","fecha","Date","now","total","length","aciertos","filter","h","porcentajeGlobal","round","porcentajeTema","ultimas","slice","aciertosTema","startTest","pool","selected","falloCount","forEach","question","a","b","ka","kb","handleModoClick","endTest","temas","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","t","style","marginTop","onClick","disabled","_MODOS$find","userAnswer","isCorrect","totalAnswered","Object","keys","find","m","options","opt","i","color","background","padding","borderRadius","margin","border","fontWeight","cursor","fontSize","c","marginBottom","v","onImport","onAdd","idx","_c","$RefreshReg$"],"sources":["C:/Users/javis/Desktop/Proyecto de Tests/personal-testing-app/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Question } from \"./types\";\nimport AddQuestionForm from \"./AddQuestionForm\";\nimport ImportTxtQuestions from \"./ImportTxtQuestions\";\nimport \"./App.css\";\n\nfunction shuffle<T>(arr: T[]): T[] {\n  return [...arr].sort(() => Math.random() - 0.5);\n}\n\nconst MODOS = [\n  { key: \"examen\", label: \"Simular Examen\" },\n  { key: \"largo\", label: \"Test Largo (50)\" },\n  { key: \"corto\", label: \"Test Corto (20)\" },\n  { key: \"repaso\", label: \"Modo Repaso\" },\n];\n\nfunction getTemas(questions: Question[]) {\n  const temasUnicos = Array.from(new Set(questions.map(q => q.tema)));\n  return [\"Todos los temas\", ...temasUnicos];\n}\n\nexport default function App() {\n  const [questions, setQuestions] = useState<Question[]>([]);\n  const [modo, setModo] = useState<string | null>(null);\n  const [testQuestions, setTestQuestions] = useState<Question[]>([]);\n  const [current, setCurrent] = useState(0);\n  const [temaSeleccionado, setTemaSeleccionado] = useState<string | null>(null);\n  const [pendingModo, setPendingModo] = useState<string | null>(null);\n  const [answers, setAnswers] = useState<{ [index: number]: string }>({});\n  const [historial, setHistorial] = useState<Array<{ pregunta: Question, acierto: boolean, fecha: number }>>([]);\n  const [pestana, setPestana] = useState<\"test\" | \"preguntas\" | \"estadisticas\">(\"test\");\n  const [mostrarAgregar, setMostrarAgregar] = useState(false);\n\n  const handleAddQuestion = (q: Question) => setQuestions((prev) => [...prev, q]);\n  const handleImportQuestions = (imported: Question[]) => setQuestions((prev) => [...prev, ...imported]);\n\n  const handleAnswer = (letra: string) => {\n    setAnswers((prev) => ({ ...prev, [current]: letra }));\n    const acierto = letra === testQuestions[current].answer;\n    setHistorial((prev) => [\n      ...prev,\n      { pregunta: testQuestions[current], acierto, fecha: Date.now() },\n    ]);\n  };\n\n  // Estadísticas\n  const total = historial.length;\n  const aciertos = historial.filter(h => h.acierto).length;\n  const porcentajeGlobal = total ? Math.round((aciertos / total) * 100) : 0;\n  function porcentajeTema(tema: string) {\n    const ultimas = historial.filter(h => h.pregunta.tema === tema).slice(-100);\n    const aciertosTema = ultimas.filter(h => h.acierto).length;\n    return ultimas.length ? Math.round((aciertosTema / ultimas.length) * 100) : 0;\n  }\n\n  // Modo repaso inteligente\n  const startTest = (modo: string, tema: string) => {\n    let pool = questions;\n    if (tema && tema !== \"Todos los temas\") {\n      pool = questions.filter(q => q.tema === tema);\n    }\n    let selected: Question[] = [];\n    if (modo === \"repaso\") {\n      const falloCount: { [key: string]: number } = {};\n      historial.forEach(h => {\n        const key = h.pregunta.question + \"|\" + h.pregunta.tema;\n        if (!h.acierto) falloCount[key] = (falloCount[key] || 0) + 1;\n      });\n      selected = [...pool]\n        .sort((a, b) => {\n          const ka = a.question + \"|\" + a.tema;\n          const kb = b.question + \"|\" + b.tema;\n          return (falloCount[kb] || 0) - (falloCount[ka] || 0);\n        })\n        .slice(0, 20);\n    } else if (modo === \"examen\") selected = shuffle(pool);\n    else if (modo === \"largo\") selected = shuffle(pool).slice(0, 50);\n    else if (modo === \"corto\") selected = shuffle(pool).slice(0, 20);\n    setTestQuestions(selected);\n    setCurrent(0);\n    setModo(modo);\n    setPendingModo(null);\n    setTemaSeleccionado(null);\n    setAnswers({});\n  };\n\n  const handleModoClick = (modo: string) => {\n    if (modo === \"largo\" || modo === \"corto\") {\n      setPendingModo(modo);\n      setTemaSeleccionado(\"Todos los temas\");\n    } else {\n      startTest(modo, \"Todos los temas\");\n    }\n  };\n\n  const endTest = () => {\n    setModo(null);\n    setTestQuestions([]);\n    setCurrent(0);\n    setAnswers({});\n  };\n\n  // Selector de tema para test largo/corto\n  if (pendingModo) {\n    const temas = getTemas(questions);\n    return (\n      <div className=\"App\">\n        <h2>Selecciona un tema para el test</h2>\n        <select value={temaSeleccionado ?? \"Todos los temas\"} onChange={e => setTemaSeleccionado(e.target.value)}>\n          {temas.map(t => (\n            <option key={t} value={t}>{t}</option>\n          ))}\n        </select>\n        <div style={{ marginTop: 16 }}>\n          <button\n            onClick={() => startTest(pendingModo, temaSeleccionado ?? \"Todos los temas\")}\n            disabled={\n              !temaSeleccionado ||\n              (temaSeleccionado !== \"Todos los temas\" && questions.filter(q => q.tema === temaSeleccionado).length === 0)\n            }\n          >\n            Empezar test\n          </button>\n          <button onClick={() => { setPendingModo(null); setTemaSeleccionado(null); }}>Cancelar</button>\n        </div>\n      </div>\n    );\n  }\n\n  // Render test mode\n  if (modo && testQuestions.length > 0) {\n    const q = testQuestions[current];\n    const userAnswer = answers[current];\n    const isCorrect = userAnswer && userAnswer === q.answer;\n    const totalAnswered = Object.keys(answers).length;\n    return (\n      <div className=\"App\">\n        <h2>\n          {MODOS.find((m) => m.key === modo)?.label} — Pregunta {current + 1} de {testQuestions.length}\n        </h2>\n        <div>\n          <b>{q.tema}:</b> {q.question}\n          <ul>\n            {q.options.map((opt, i) => {\n              const letra = [\"A\", \"B\", \"C\", \"D\"][i];\n              let color = \"\";\n              if (userAnswer) {\n                if (letra === q.answer) color = \"#4caf50\";\n                if (letra === userAnswer && userAnswer !== q.answer) color = \"#e57373\";\n              }\n              return (\n                <li key={i} style={{ background: color, padding: \"0.5em\", borderRadius: 6, margin: \"0.2em 0\" }}>\n                  <button\n                    disabled={!!userAnswer}\n                    style={{\n                      background: \"none\",\n                      border: \"none\",\n                      color: \"inherit\",\n                      fontWeight: \"bold\",\n                      cursor: userAnswer ? \"default\" : \"pointer\",\n                      fontSize: \"1em\",\n                    }}\n                    onClick={() => handleAnswer(letra)}\n                  >\n                    {letra}:\n                  </button>{\" \"}\n                  {opt}\n                  {userAnswer && letra === q.answer ? \" ✅\" : \"\"}\n                  {userAnswer && letra === userAnswer && userAnswer !== q.answer ? \" ❌\" : \"\"}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        {userAnswer && (\n          <div style={{ margin: \"1em 0\", fontWeight: \"bold\" }}>\n            {isCorrect ? \"¡Correcto!\" : `Incorrecto. Respuesta correcta: ${q.answer}`}\n          </div>\n        )}\n        <div>\n          Preguntas respondidas: {totalAnswered} / {testQuestions.length}\n        </div>\n        <button disabled={current === 0} onClick={() => setCurrent((c) => c - 1)}>\n          Anterior\n        </button>\n        <button\n          disabled={current === testQuestions.length - 1}\n          onClick={() => setCurrent((c) => c + 1)}\n        >\n          Siguiente\n        </button>\n        <button onClick={endTest}>Salir</button>\n      </div>\n    );\n  }\n\n  // Pantalla principal con pestañas\n  return (\n    <div className=\"App\">\n      <div style={{ marginBottom: 24 }}>\n        <button onClick={() => setPestana(\"test\")}>Modo Test</button>\n        <button onClick={() => setPestana(\"preguntas\")}>Preguntas añadidas</button>\n        <button onClick={() => setPestana(\"estadisticas\")}>Estadísticas</button>\n      </div>\n\n      {pestana === \"test\" && (\n        <>\n          <button onClick={() => setMostrarAgregar((v) => !v)}>\n            {mostrarAgregar ? \"Cerrar menú de añadir preguntas\" : \"Añadir preguntas\"}\n          </button>\n          {mostrarAgregar && (\n            <>\n              <ImportTxtQuestions onImport={handleImportQuestions} />\n              <AddQuestionForm onAdd={handleAddQuestion} />\n            </>\n          )}\n        </>\n      )}\n\n      {pestana === \"preguntas\" && (\n        <section>\n          <h2>Preguntas añadidas ({questions.length})</h2>\n          <ul>\n            {questions.map((q, idx) => (\n              <li key={idx}>\n                <b>{q.tema}:</b> {q.question}\n              </li>\n            ))}\n          </ul>\n        </section>\n      )}\n\n      {pestana === \"estadisticas\" && (\n        <section>\n          <h2>Estadísticas</h2>\n          <div>Total preguntas: {questions.length}</div>\n        </section>\n      )}\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}