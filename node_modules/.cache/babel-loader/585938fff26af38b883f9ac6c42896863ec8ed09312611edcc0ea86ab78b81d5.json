{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javis\\\\Desktop\\\\Proyecto de Tests\\\\personal-testing-app\\\\src\\\\ImportTxtQuestions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ImportTxtQuestions({\n  onImport\n}) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [delimiter, setDelimiter] = useState(\";\");\n  const handleImport = () => {\n    const lines = text.trim().split(\"\\n\").filter(line => line.trim());\n    const questions = [];\n    lines.forEach(line => {\n      const parts = line.split(delimiter);\n      if (parts.length >= 6) {\n        var _parts$;\n        questions.push({\n          tema: parts[0].trim(),\n          question: parts[1].trim(),\n          options: [parts[2].trim(), parts[3].trim(), parts[4].trim(), parts[5].trim()],\n          answer: ((_parts$ = parts[6]) === null || _parts$ === void 0 ? void 0 : _parts$.trim()) || \"A\"\n        });\n      }\n    });\n    if (questions.length > 0) {\n      onImport(questions);\n      setText(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#fff\",\n      padding: 16,\n      borderRadius: 8,\n      marginBottom: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Importar desde texto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Delimitador:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: delimiter,\n          onChange: e => setDelimiter(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \";\",\n            children: \"Punto y coma (;)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \",\",\n            children: \"Coma (,)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"|\",\n            children: \"Pipe (|)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Texto (formato: tema;pregunta;opcionA;opcionB;opcionC;opcionD;respuesta):\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          rows: 10,\n          style: {\n            width: \"100%\"\n          },\n          placeholder: \"Tema 1;\\xBFCu\\xE1l es la capital de Espa\\xF1a?;Madrid;Barcelona;Valencia;Sevilla;A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleImport,\n      disabled: !text.trim(),\n      children: \"Importar preguntas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(ImportTxtQuestions, \"n1HWvYSyxn0jJxzwd2hhbbxUFfQ=\");\n_c = ImportTxtQuestions;\nexport default ImportTxtQuestions;\nvar _c;\n$RefreshReg$(_c, \"ImportTxtQuestions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ImportTxtQuestions","onImport","_s","text","setText","delimiter","setDelimiter","handleImport","lines","trim","split","filter","line","questions","forEach","parts","length","_parts$","push","tema","question","options","answer","style","background","padding","borderRadius","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","rows","width","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/javis/Desktop/Proyecto de Tests/personal-testing-app/src/ImportTxtQuestions.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Question } from \"./types\";\r\n\r\nfunction ImportTxtQuestions({ onImport }: { onImport: (qs: Question[]) => void }) {\r\n  const [text, setText] = useState(\"\");\r\n  const [delimiter, setDelimiter] = useState(\";\");\r\n\r\n  const handleImport = () => {\r\n    const lines = text.trim().split(\"\\n\").filter(line => line.trim());\r\n    const questions: Question[] = [];\r\n    \r\n    lines.forEach(line => {\r\n      const parts = line.split(delimiter);\r\n      if (parts.length >= 6) {\r\n        questions.push({\r\n          tema: parts[0].trim(),\r\n          question: parts[1].trim(),\r\n          options: [parts[2].trim(), parts[3].trim(), parts[4].trim(), parts[5].trim()],\r\n          answer: parts[6]?.trim() || \"A\"\r\n        });\r\n      }\r\n    });\r\n    \r\n    if (questions.length > 0) {\r\n      onImport(questions);\r\n      setText(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ background: \"#fff\", padding: 16, borderRadius: 8, marginBottom: 24 }}>\r\n      <h2>Importar desde texto</h2>\r\n      <div>\r\n        <label>\r\n          Delimitador:\r\n          <select value={delimiter} onChange={e => setDelimiter(e.target.value)}>\r\n            <option value=\";\">Punto y coma (;)</option>\r\n            <option value=\",\">Coma (,)</option>\r\n            <option value=\"|\">Pipe (|)</option>\r\n          </select>\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Texto (formato: tema;pregunta;opcionA;opcionB;opcionC;opcionD;respuesta):\r\n          <textarea\r\n            value={text}\r\n            onChange={e => setText(e.target.value)}\r\n            rows={10}\r\n            style={{ width: \"100%\" }}\r\n            placeholder=\"Tema 1;¿Cuál es la capital de España?;Madrid;Barcelona;Valencia;Sevilla;A\"\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={handleImport} disabled={!text.trim()}>\r\n        Importar preguntas\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportTxtQuestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}