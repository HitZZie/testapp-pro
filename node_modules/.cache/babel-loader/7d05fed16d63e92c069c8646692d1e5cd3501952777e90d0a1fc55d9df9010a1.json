{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\javis\\\\Desktop\\\\Proyecto de Tests\\\\personal-testing-app\\\\src\\\\ImportTxtQuestions.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst temas = [...Array.from({\n  length: 10\n}, (_, i) => ({\n  value: `Tema ${i + 1}`,\n  label: `Parte General - Tema ${i + 1}`\n})), ...Array.from({\n  length: 31\n}, (_, i) => ({\n  value: `Tema ${i + 11}`,\n  label: `Parte Específica - Tema ${i + 11}`\n}))];\nfunction ImportTxtQuestions({\n  onImport\n}) {\n  _s();\n  const [temaDefecto, setTemaDefecto] = useState(temas[0].value);\n  const [pendingQuestions, setPendingQuestions] = useState([]);\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\n  const handleFileUpload = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = event => {\n      var _event$target;\n      const content = (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.result;\n      const questions = parseQuestions(content);\n      if (questions.length > 0) {\n        // En lugar de importar directamente, mostrar el modal de asignación\n        setPendingQuestions(questions.map(q => ({\n          ...q,\n          tema: temaDefecto\n        })));\n        setShowAssignmentModal(true);\n      } else {\n        alert(\"No se encontraron preguntas válidas en el archivo.\");\n      }\n    };\n    reader.readAsText(file, 'utf-8');\n  };\n  const parseQuestions = content => {\n    const questions = [];\n    const questionBlocks = content.split(/\\n\\s*\\n/).filter(block => block.trim());\n    console.log(`Detectados ${questionBlocks.length} bloques de preguntas`);\n    questionBlocks.forEach((block, blockIndex) => {\n      const lines = block.trim().split('\\n').map(line => line.trim()).filter(line => line);\n      let questionText = \"\";\n      const options = [];\n      let correctAnswer = \"\";\n      console.log(`\\nProcesando bloque ${blockIndex + 1}:`, lines);\n      lines.forEach((line, lineIndex) => {\n        console.log(`  Línea ${lineIndex + 1}: \"${line}\"`);\n\n        // Detectar pregunta\n        if (line.toLowerCase().includes('pregunta:') || lineIndex === 0 && !line.match(/^\\*?[a-d][\\):]/i)) {\n          questionText = line.replace(/^pregunta:\\s*/i, '').trim();\n          console.log(`    → Pregunta detectada: \"${questionText}\"`);\n        }\n        // Detectar opciones (acepta tanto : como ))\n        else if (line.match(/^\\*?[a-d][\\):]/i)) {\n          const isCorrect = line.startsWith('*');\n          const letter = isCorrect ? line.charAt(1).toUpperCase() : line.charAt(0).toUpperCase();\n\n          // Detectar si usa : o )\n          let optionText = \"\";\n          if (line.includes(':')) {\n            optionText = isCorrect ? line.substring(3).trim() : line.substring(2).trim();\n          } else if (line.includes(')')) {\n            optionText = isCorrect ? line.substring(3).trim() : line.substring(2).trim();\n          }\n          console.log(`    → Opción ${letter}: \"${optionText}\" ${isCorrect ? '(CORRECTA)' : ''}`);\n          if (isCorrect) {\n            correctAnswer = letter;\n          }\n          options.push(optionText);\n        }\n      });\n      console.log(`  Resultado: Pregunta=\"${questionText}\", Opciones=${options.length}, Respuesta=\"${correctAnswer}\"`);\n\n      // Validar que tenemos todos los datos necesarios\n      if (questionText && options.length === 4 && correctAnswer) {\n        questions.push({\n          question: questionText,\n          options,\n          answer: correctAnswer\n        });\n        console.log(`  ✅ Pregunta ${questions.length} añadida correctamente`);\n      } else {\n        console.log(`  ❌ Pregunta inválida - Pregunta: ${!!questionText}, Opciones: ${options.length}/4, Respuesta: \"${correctAnswer}\"`);\n      }\n    });\n    console.log(`\\nTotal de preguntas procesadas: ${questions.length}`);\n    return questions;\n  };\n  const handleTemaChange = (questionIndex, newTema) => {\n    setPendingQuestions(prev => prev.map((q, i) => i === questionIndex ? {\n      ...q,\n      tema: newTema\n    } : q));\n  };\n  const handleConfirmImport = () => {\n    const finalQuestions = pendingQuestions.map(q => ({\n      tema: q.tema,\n      question: q.question,\n      options: q.options,\n      answer: q.answer\n    }));\n    onImport(finalQuestions);\n    alert(`Se importaron ${finalQuestions.length} preguntas correctamente.`);\n    setShowAssignmentModal(false);\n    setPendingQuestions([]);\n  };\n  const handleCancelImport = () => {\n    setShowAssignmentModal(false);\n    setPendingQuestions([]);\n  };\n  const applyTemaToAll = () => {\n    setPendingQuestions(prev => prev.map(q => ({\n      ...q,\n      tema: temaDefecto\n    })));\n  };\n  if (showAssignmentModal) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n        background: 'rgba(0,0,0,0.7)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 1000\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          background: 'white',\n          padding: 24,\n          borderRadius: 8,\n          maxWidth: '90vw',\n          maxHeight: '90vh',\n          overflow: 'auto',\n          width: '800px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Asignar temas a las preguntas detectadas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Se detectaron \", pendingQuestions.length, \" preguntas. Asigna el tema correspondiente a cada una:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Tema por defecto:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              value: temaDefecto,\n              onChange: e => setTemaDefecto(e.target.value),\n              children: temas.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: t.value,\n                children: t.label\n              }, t.value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: applyTemaToAll,\n              style: {\n                marginLeft: 8\n              },\n              children: \"Aplicar a todas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxHeight: '400px',\n            overflow: 'auto'\n          },\n          children: pendingQuestions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              border: '1px solid #ddd',\n              padding: 12,\n              marginBottom: 12,\n              borderRadius: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Pregunta \", index + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, this), \" \", q.question]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '0.9em',\n                color: '#666',\n                marginBottom: 8\n              },\n              children: [\"Respuestas: \", q.options.map((opt, i) => `${['A', 'B', 'C', 'D'][i]}: ${opt}`).join(' | '), /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\" (Correcta: \", q.answer, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Tema:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                  value: q.tema || temaDefecto,\n                  onChange: e => handleTemaChange(index, e.target.value),\n                  style: {\n                    marginLeft: 8\n                  },\n                  children: temas.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: t.value,\n                    children: t.label\n                  }, t.value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 16,\n            display: 'flex',\n            gap: 12\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirmImport,\n            style: {\n              background: '#4caf50',\n              color: 'white',\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: 4\n            },\n            children: [\"Importar \", pendingQuestions.length, \" preguntas\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancelImport,\n            style: {\n              background: '#f44336',\n              color: 'white',\n              padding: '8px 16px',\n              border: 'none',\n              borderRadius: 4\n            },\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: \"#fff\",\n      padding: 16,\n      borderRadius: 8,\n      marginBottom: 24\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Importar preguntas desde archivo TXT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Tema por defecto:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: temaDefecto,\n          onChange: e => setTemaDefecto(e.target.value),\n          children: temas.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t.value,\n            children: t.label\n          }, t.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Seleccionar archivo TXT:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".txt\",\n          onChange: handleFileUpload,\n          style: {\n            marginLeft: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: \"#f5f5f5\",\n        padding: 12,\n        borderRadius: 4,\n        fontSize: \"0.9em\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Formatos aceptados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: `Pregunta: ¿Cuál es la capital de Francia?\na) Madrid\n*b) París\nc) Londres\nd) Roma\n\nO también:\n\nPregunta: ¿Cuál es la capital de España?\na: Madrid\n*b: París\nc: Londres\nd: Roma`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nota:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 12\n        }, this), \"- Acepta tanto `)` como `:` despu\\xE9s de la letra - La respuesta correcta debe empezar con asterisco (*) - Despu\\xE9s de cargar el archivo, podr\\xE1s asignar el tema a cada pregunta\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(ImportTxtQuestions, \"d6at3xhhsnVmCfhlI0IyvdnLNvk=\");\n_c = ImportTxtQuestions;\nexport default ImportTxtQuestions;\nvar _c;\n$RefreshReg$(_c, \"ImportTxtQuestions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","temas","Array","from","length","_","i","value","label","ImportTxtQuestions","onImport","_s","temaDefecto","setTemaDefecto","pendingQuestions","setPendingQuestions","showAssignmentModal","setShowAssignmentModal","handleFileUpload","e","_e$target$files","file","target","files","reader","FileReader","onload","event","_event$target","content","result","questions","parseQuestions","map","q","tema","alert","readAsText","questionBlocks","split","filter","block","trim","console","log","forEach","blockIndex","lines","line","questionText","options","correctAnswer","lineIndex","toLowerCase","includes","match","replace","isCorrect","startsWith","letter","charAt","toUpperCase","optionText","substring","push","question","answer","handleTemaChange","questionIndex","newTema","prev","handleConfirmImport","finalQuestions","handleCancelImport","applyTemaToAll","style","position","top","left","right","bottom","background","display","alignItems","justifyContent","zIndex","children","padding","borderRadius","maxWidth","maxHeight","overflow","width","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onChange","t","onClick","marginLeft","index","border","fontSize","color","opt","join","marginTop","gap","type","accept","_c","$RefreshReg$"],"sources":["C:/Users/javis/Desktop/Proyecto de Tests/personal-testing-app/src/ImportTxtQuestions.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Question } from \"./types\";\r\n\r\nconst temas = [\r\n  ...Array.from({ length: 10 }, (_, i) => ({ value: `Tema ${i + 1}`, label: `Parte General - Tema ${i + 1}` })),\r\n  ...Array.from({ length: 31 }, (_, i) => ({ value: `Tema ${i + 11}`, label: `Parte Específica - Tema ${i + 11}` })),\r\n];\r\n\r\ninterface QuestionDraft {\r\n  question: string;\r\n  options: string[];\r\n  answer: string;\r\n  tema?: string;\r\n}\r\n\r\nfunction ImportTxtQuestions({ onImport }: { onImport: (qs: Question[]) => void }) {\r\n  const [temaDefecto, setTemaDefecto] = useState(temas[0].value);\r\n  const [pendingQuestions, setPendingQuestions] = useState<QuestionDraft[]>([]);\r\n  const [showAssignmentModal, setShowAssignmentModal] = useState(false);\r\n\r\n  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = (event) => {\r\n      const content = event.target?.result as string;\r\n      const questions = parseQuestions(content);\r\n      if (questions.length > 0) {\r\n        // En lugar de importar directamente, mostrar el modal de asignación\r\n        setPendingQuestions(questions.map(q => ({ ...q, tema: temaDefecto })));\r\n        setShowAssignmentModal(true);\r\n      } else {\r\n        alert(\"No se encontraron preguntas válidas en el archivo.\");\r\n      }\r\n    };\r\n    reader.readAsText(file, 'utf-8');\r\n  };\r\n\r\n  const parseQuestions = (content: string): QuestionDraft[] => {\r\n    const questions: QuestionDraft[] = [];\r\n    \r\n    const questionBlocks = content.split(/\\n\\s*\\n/).filter(block => block.trim());\r\n    \r\n    console.log(`Detectados ${questionBlocks.length} bloques de preguntas`);\r\n    \r\n    questionBlocks.forEach((block, blockIndex) => {\r\n      const lines = block.trim().split('\\n').map(line => line.trim()).filter(line => line);\r\n      \r\n      let questionText = \"\";\r\n      const options: string[] = [];\r\n      let correctAnswer = \"\";\r\n      \r\n      console.log(`\\nProcesando bloque ${blockIndex + 1}:`, lines);\r\n      \r\n      lines.forEach((line, lineIndex) => {\r\n        console.log(`  Línea ${lineIndex + 1}: \"${line}\"`);\r\n        \r\n        // Detectar pregunta\r\n        if (line.toLowerCase().includes('pregunta:') || \r\n            (lineIndex === 0 && !line.match(/^\\*?[a-d][\\):]/i))) {\r\n          questionText = line.replace(/^pregunta:\\s*/i, '').trim();\r\n          console.log(`    → Pregunta detectada: \"${questionText}\"`);\r\n        } \r\n        // Detectar opciones (acepta tanto : como ))\r\n        else if (line.match(/^\\*?[a-d][\\):]/i)) {\r\n          const isCorrect = line.startsWith('*');\r\n          const letter = isCorrect ? line.charAt(1).toUpperCase() : line.charAt(0).toUpperCase();\r\n          \r\n          // Detectar si usa : o )\r\n          let optionText = \"\";\r\n          if (line.includes(':')) {\r\n            optionText = isCorrect ? line.substring(3).trim() : line.substring(2).trim();\r\n          } else if (line.includes(')')) {\r\n            optionText = isCorrect ? line.substring(3).trim() : line.substring(2).trim();\r\n          }\r\n          \r\n          console.log(`    → Opción ${letter}: \"${optionText}\" ${isCorrect ? '(CORRECTA)' : ''}`);\r\n          \r\n          if (isCorrect) {\r\n            correctAnswer = letter;\r\n          }\r\n          \r\n          options.push(optionText);\r\n        }\r\n      });\r\n      \r\n      console.log(`  Resultado: Pregunta=\"${questionText}\", Opciones=${options.length}, Respuesta=\"${correctAnswer}\"`);\r\n      \r\n      // Validar que tenemos todos los datos necesarios\r\n      if (questionText && options.length === 4 && correctAnswer) {\r\n        questions.push({\r\n          question: questionText,\r\n          options,\r\n          answer: correctAnswer\r\n        });\r\n        console.log(`  ✅ Pregunta ${questions.length} añadida correctamente`);\r\n      } else {\r\n        console.log(`  ❌ Pregunta inválida - Pregunta: ${!!questionText}, Opciones: ${options.length}/4, Respuesta: \"${correctAnswer}\"`);\r\n      }\r\n    });\r\n    \r\n    console.log(`\\nTotal de preguntas procesadas: ${questions.length}`);\r\n    return questions;\r\n  };\r\n\r\n  const handleTemaChange = (questionIndex: number, newTema: string) => {\r\n    setPendingQuestions(prev => \r\n      prev.map((q, i) => i === questionIndex ? { ...q, tema: newTema } : q)\r\n    );\r\n  };\r\n\r\n  const handleConfirmImport = () => {\r\n    const finalQuestions: Question[] = pendingQuestions.map(q => ({\r\n      tema: q.tema!,\r\n      question: q.question,\r\n      options: q.options,\r\n      answer: q.answer\r\n    }));\r\n    \r\n    onImport(finalQuestions);\r\n    alert(`Se importaron ${finalQuestions.length} preguntas correctamente.`);\r\n    setShowAssignmentModal(false);\r\n    setPendingQuestions([]);\r\n  };\r\n\r\n  const handleCancelImport = () => {\r\n    setShowAssignmentModal(false);\r\n    setPendingQuestions([]);\r\n  };\r\n\r\n  const applyTemaToAll = () => {\r\n    setPendingQuestions(prev => \r\n      prev.map(q => ({ ...q, tema: temaDefecto }))\r\n    );\r\n  };\r\n\r\n  if (showAssignmentModal) {\r\n    return (\r\n      <div style={{ \r\n        position: 'fixed', \r\n        top: 0, \r\n        left: 0, \r\n        right: 0, \r\n        bottom: 0, \r\n        background: 'rgba(0,0,0,0.7)', \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center',\r\n        zIndex: 1000\r\n      }}>\r\n        <div style={{ \r\n          background: 'white', \r\n          padding: 24, \r\n          borderRadius: 8, \r\n          maxWidth: '90vw', \r\n          maxHeight: '90vh', \r\n          overflow: 'auto',\r\n          width: '800px'\r\n        }}>\r\n          <h2>Asignar temas a las preguntas detectadas</h2>\r\n          <p>Se detectaron {pendingQuestions.length} preguntas. Asigna el tema correspondiente a cada una:</p>\r\n          \r\n          <div style={{ marginBottom: 16 }}>\r\n            <label>\r\n              Tema por defecto:\r\n              <select value={temaDefecto} onChange={e => setTemaDefecto(e.target.value)}>\r\n                {temas.map(t => (\r\n                  <option key={t.value} value={t.value}>{t.label}</option>\r\n                ))}\r\n              </select>\r\n              <button onClick={applyTemaToAll} style={{ marginLeft: 8 }}>\r\n                Aplicar a todas\r\n              </button>\r\n            </label>\r\n          </div>\r\n\r\n          <div style={{ maxHeight: '400px', overflow: 'auto' }}>\r\n            {pendingQuestions.map((q, index) => (\r\n              <div key={index} style={{ \r\n                border: '1px solid #ddd', \r\n                padding: 12, \r\n                marginBottom: 12, \r\n                borderRadius: 4 \r\n              }}>\r\n                <div style={{ marginBottom: 8 }}>\r\n                  <strong>Pregunta {index + 1}:</strong> {q.question}\r\n                </div>\r\n                <div style={{ fontSize: '0.9em', color: '#666', marginBottom: 8 }}>\r\n                  Respuestas: {q.options.map((opt, i) => \r\n                    `${['A','B','C','D'][i]}: ${opt}`\r\n                  ).join(' | ')} \r\n                  <strong> (Correcta: {q.answer})</strong>\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    Tema: \r\n                    <select \r\n                      value={q.tema || temaDefecto} \r\n                      onChange={e => handleTemaChange(index, e.target.value)}\r\n                      style={{ marginLeft: 8 }}\r\n                    >\r\n                      {temas.map(t => (\r\n                        <option key={t.value} value={t.value}>{t.label}</option>\r\n                      ))}\r\n                    </select>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div style={{ marginTop: 16, display: 'flex', gap: 12 }}>\r\n            <button \r\n              onClick={handleConfirmImport}\r\n              style={{ \r\n                background: '#4caf50', \r\n                color: 'white', \r\n                padding: '8px 16px', \r\n                border: 'none', \r\n                borderRadius: 4 \r\n              }}\r\n            >\r\n              Importar {pendingQuestions.length} preguntas\r\n            </button>\r\n            <button \r\n              onClick={handleCancelImport}\r\n              style={{ \r\n                background: '#f44336', \r\n                color: 'white', \r\n                padding: '8px 16px', \r\n                border: 'none', \r\n                borderRadius: 4 \r\n              }}\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ background: \"#fff\", padding: 16, borderRadius: 8, marginBottom: 24 }}>\r\n      <h2>Importar preguntas desde archivo TXT</h2>\r\n      \r\n      <div style={{ marginBottom: 16 }}>\r\n        <label>\r\n          Tema por defecto:\r\n          <select value={temaDefecto} onChange={e => setTemaDefecto(e.target.value)}>\r\n            {temas.map(t => (\r\n              <option key={t.value} value={t.value}>{t.label}</option>\r\n            ))}\r\n          </select>\r\n        </label>\r\n      </div>\r\n\r\n      <div style={{ marginBottom: 16 }}>\r\n        <label>\r\n          Seleccionar archivo TXT:\r\n          <input\r\n            type=\"file\"\r\n            accept=\".txt\"\r\n            onChange={handleFileUpload}\r\n            style={{ marginLeft: 8 }}\r\n          />\r\n        </label>\r\n      </div>\r\n\r\n      <div style={{ background: \"#f5f5f5\", padding: 12, borderRadius: 4, fontSize: \"0.9em\" }}>\r\n        <h4>Formatos aceptados:</h4>\r\n        <pre>{`Pregunta: ¿Cuál es la capital de Francia?\r\na) Madrid\r\n*b) París\r\nc) Londres\r\nd) Roma\r\n\r\nO también:\r\n\r\nPregunta: ¿Cuál es la capital de España?\r\na: Madrid\r\n*b: París\r\nc: Londres\r\nd: Roma`}</pre>\r\n        <p><strong>Nota:</strong> \r\n          - Acepta tanto `)` como `:` después de la letra\r\n          - La respuesta correcta debe empezar con asterisco (*)\r\n          - Después de cargar el archivo, podrás asignar el tema a cada pregunta\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImportTxtQuestions;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}